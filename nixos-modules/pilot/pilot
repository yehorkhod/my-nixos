# ----------------------------------------------------------------
# ---------------------------- Paths -----------------------------
# ----------------------------------------------------------------
CONFIG_DIRECTORY="$HOME/.config/.pilot"
DESTINATIONS_FILE="$CONFIG_DIRECTORY/destinations.txt"

# Ensure config directory and destinations file exist
mkdir -p "$CONFIG_DIRECTORY"
touch "$DESTINATIONS_FILE"

# ----------------------------------------------------------------
# ---------------------------- Info ------------------------------
# ----------------------------------------------------------------
show_help() {
  echo "Usage:"
  echo "  pilot: Start a session in a directory"
  echo "  pilot add <path>: Add a directory to the list of destinations"
  echo "  pilot rm: Remove a directory from the list of destinations"
}

invalid_command() {
  echo "Invalid command. See 'pilot --help' for usage."
  exit 1
}

# ----------------------------------------------------------------
# -------------------------- Functions ---------------------------
# ----------------------------------------------------------------
add_directory_to_destinations() {
  local dir_to_add="$1"
  # Convert to absolute path
  dir_to_add=$(realpath "$dir_to_add")

  # Check if directory is already in the destinations file
  if grep -Fxq "$dir_to_add" "$DESTINATIONS_FILE"; then
    echo "Already there!"
  else
    echo "$dir_to_add" >> "$DESTINATIONS_FILE"
    echo "Added directory: $dir_to_add"
  fi
}

select_directory() {
  # Read directories from destinations file
  if [ ! -s "$DESTINATIONS_FILE" ]; then
    echo "No destinations found. See 'pilot --help' for usage."
    exit 1
  fi

  selected_directory=$(
    cat "$DESTINATIONS_FILE" | fzf \
      --prompt="Choose a destination: " \
      --height=10 \
      --border \
      --reverse
  )

  if [ -n "$selected_directory" ]; then
    session_name=$(basename "$selected_directory")

    cd "$selected_directory" || exit
    tmux new-session -s "$session_name"
  else
    echo "No directory selected. Exiting."
  fi
}

remove_directory_from_destinations() {
  # Read directories from destinations file
  if [ ! -s "$DESTINATIONS_FILE" ]; then
    echo "No destinations found. See 'pilot --help' for usage."
    exit 1
  fi

  # Use fzf to select a directory to remove
  directory_to_remove=$(
    cat "$DESTINATIONS_FILE" | fzf \
      --prompt="Choose a directory to remove: " \
      --height=10 \
      --border \
      --reverse
  )

  if [ -n "$directory_to_remove" ]; then
    # Remove the selected directory from the destinations file
    sed -i "\|$directory_to_remove|d" "$DESTINATIONS_FILE"
    echo "Removed directory: $directory_to_remove"
  else
    echo "No directory selected. Exiting."
  fi
}

# ----------------------------------------------------------------
# ---------------------------- Main ------------------------------
# ----------------------------------------------------------------
case "$1" in
  "")
    select_directory
    ;;

  add)
    add_directory_to_destinations "$2"
    ;;

  rm)
    remove_directory_from_destinations
    ;;

  --help)
    show_help
    ;;

  *)
    invalid_command
    ;;
esac
